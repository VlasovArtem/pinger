// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	pinger "github.com/VlasovArtem/pinger/src/pinger"
	mock "github.com/stretchr/testify/mock"
)

// ResultFormatter is an autogenerated mock type for the ResultFormatter type
type ResultFormatter struct {
	mock.Mock
}

// FormatError provides a mock function with given fields: prev, current
func (_m *ResultFormatter) FormatError(prev *pinger.PingInfo, current pinger.PingInfo) string {
	ret := _m.Called(prev, current)

	var r0 string
	if rf, ok := ret.Get(0).(func(*pinger.PingInfo, pinger.PingInfo) string); ok {
		r0 = rf(prev, current)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// FormatSuccess provides a mock function with given fields: prev, current
func (_m *ResultFormatter) FormatSuccess(prev *pinger.PingInfo, current pinger.PingInfo) string {
	ret := _m.Called(prev, current)

	var r0 string
	if rf, ok := ret.Get(0).(func(*pinger.PingInfo, pinger.PingInfo) string); ok {
		r0 = rf(prev, current)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewResultFormatter interface {
	mock.TestingT
	Cleanup(func())
}

// NewResultFormatter creates a new instance of ResultFormatter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewResultFormatter(t mockConstructorTestingTNewResultFormatter) *ResultFormatter {
	mock := &ResultFormatter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
