// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	config "github.com/VlasovArtem/pinger/src/config"
	mock "github.com/stretchr/testify/mock"

	pinger "github.com/VlasovArtem/pinger/src/pinger"
)

// Processor is an autogenerated mock type for the Processor type
type Processor struct {
	mock.Mock
}

// GetDefaultConfig provides a mock function with given fields:
func (_m *Processor) GetDefaultConfig() *config.Config {
	ret := _m.Called()

	var r0 *config.Config
	if rf, ok := ret.Get(0).(func() *config.Config); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*config.Config)
		}
	}

	return r0
}

// GetTrigger provides a mock function with given fields:
func (_m *Processor) GetTrigger() pinger.Trigger {
	ret := _m.Called()

	var r0 pinger.Trigger
	if rf, ok := ret.Get(0).(func() pinger.Trigger); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(pinger.Trigger)
	}

	return r0
}

// OnError provides a mock function with given fields: prev, current
func (_m *Processor) OnError(prev *pinger.PingInfo, current pinger.PingInfo) {
	_m.Called(prev, current)
}

// OnSuccess provides a mock function with given fields: prev, current
func (_m *Processor) OnSuccess(prev *pinger.PingInfo, current pinger.PingInfo) {
	_m.Called(prev, current)
}

type mockConstructorTestingTNewProcessor interface {
	mock.TestingT
	Cleanup(func())
}

// NewProcessor creates a new instance of Processor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProcessor(t mockConstructorTestingTNewProcessor) *Processor {
	mock := &Processor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
