// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	config "github.com/VlasovArtem/pinger/src/config"
	mock "github.com/stretchr/testify/mock"

	pinger "github.com/VlasovArtem/pinger/src/pinger"
)

// Executor is an autogenerated mock type for the Executor type
type Executor struct {
	mock.Mock
}

// Start provides a mock function with given fields: configProvider, pingFunc, runResultFunc
func (_m *Executor) Start(configProvider func() config.Config, pingFunc func(config.Config) bool, runResultFunc func(pinger.PingInfo)) {
	_m.Called(configProvider, pingFunc, runResultFunc)
}

// Status provides a mock function with given fields:
func (_m *Executor) Status() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Stop provides a mock function with given fields:
func (_m *Executor) Stop() {
	_m.Called()
}

type mockConstructorTestingTNewExecutor interface {
	mock.TestingT
	Cleanup(func())
}

// NewExecutor creates a new instance of Executor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExecutor(t mockConstructorTestingTNewExecutor) *Executor {
	mock := &Executor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
